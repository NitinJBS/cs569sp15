CBMC version 5.0 64-bit macos
Parsing sut.c
Converting
Type-checking sut
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop InsertList.0 iteration 1 (5 max) file sut.c line 22 function InsertList thread 0
Unwinding loop InsertList.0 iteration 2 (5 max) file sut.c line 22 function InsertList thread 0
Unwinding loop InsertList.0 iteration 3 (5 max) file sut.c line 22 function InsertList thread 0
Unwinding loop InsertList.0 iteration 4 (5 max) file sut.c line 22 function InsertList thread 0
Not unwinding loop InsertList.0 iteration 5 (5 max) file sut.c line 22 function InsertList thread 0
size of program expression: 130 steps
simple slicing removed 6 assignments
Generated 23 VCC(s), 23 remaining after simplification
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
61545 variables, 281685 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Runtime decision procedure: 0.533s
Building error trace

Counterexample:

State 17 file sut.c line 13 thread 0
----------------------------------------------------
  L=INVALID-129 (1000000100000000000000000000000000000000000000000000000000000011)

State 18 file sut.c line 13 thread 0
----------------------------------------------------
  x=0 (00000000000000000000000000000000)

State 19 file sut.c line 13 thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 20 file sut.c line 15 function InsertList thread 0
----------------------------------------------------
  j=0 (00000000000000000000000000000000)

State 26 file sut.c line 22 function InsertList thread 0
----------------------------------------------------
  j=3 (00000000000000000000000000000011)

Violated property:
  file sut.c line 23 function InsertList
  array.data upper bound in L->data[(signed long int)(j + 1)]
  DYNAMIC_OBJECT(L) && !(POINTER_OBJECT(L) == POINTER_OBJECT(__CPROVER_malloc_object)) || !(4 * (signed long int)(1 + j) + POINTER_OFFSET(L) >= (DYNAMIC_OBJECT(L) ? (long int)__CPROVER_malloc_size : OBJECT_SIZE(L)))

VERIFICATION FAILED
